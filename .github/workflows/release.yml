name: Build and Release Bot

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Prepare distribution
      run: |
        mkdir -p dist/app
        cp *.js dist/app/
        cp package.json dist/app/
      shell: bash

    - name: Copy node_modules
      run: |
        mkdir -p dist/app/node_modules
        cp -r node_modules/* dist/app/node_modules/
      shell: bash

    - name: Create start script
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          echo "node app.js" > dist/start.bat
        else
          echo "node app.js" > dist/start.sh
          chmod +x dist/start.sh
        fi
      shell: bash

    - name: Compress folder
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          powershell Compress-Archive -Path dist\* -DestinationPath TelegramSafetyKeeper-windows.zip -Force
        elif [[ "${{ runner.os }}" == "Linux" ]]; then
          zip -r TelegramSafetyKeeper-linux.zip dist
        else
          zip -r TelegramSafetyKeeper-macos.zip dist
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: TelegramSafetyKeeper-${{ runner.os }}
        path: |
          TelegramSafetyKeeper-*.zip
        retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/**/TelegramSafetyKeeper-*.zip
