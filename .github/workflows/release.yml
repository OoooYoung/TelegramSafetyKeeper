name: Build and Release Bot

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install system dependencies
      if: runner.os == 'macOS'
      run: |
        brew install pkg-config
        npm install -g node-gyp

    - name: Install dependencies
      run: npm install

    - name: Prepare distribution
      shell: bash
      run: |
        mkdir -p dist/app
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          for f in (*.js); do cp "$f" dist/app/; done
          cp package.json dist/app/
        else
          find . -maxdepth 1 -name '*.js' -exec cp {} dist/app/ \;
          cp package.json dist/app/
        fi

    - name: Verify build
      shell: bash
      run: |
        if [ ! -f dist/app/app.js ]; then
          echo "❌ Build failed - main file missing"
          exit 1
        fi

    - name: Create start script
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "node app.js" > dist/start.bat
        else
          echo "#!/bin/bash" > dist/start.sh
          echo "node app.js" >> dist/start.sh
          chmod +x dist/start.sh
        fi

    - name: Compress folder
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          powershell Compress-Archive -Path dist\* -DestinationPath TelegramSafetyKeeper-windows.zip -Force
        elif [[ "$RUNNER_OS" == "Linux" ]]; then
          zip -r TelegramSafetyKeeper-linux.zip dist
        else
          zip -r TelegramSafetyKeeper-macos.zip dist
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: TelegramSafetyKeeper-${{ matrix.os }}
        path: TelegramSafetyKeeper-*.zip
        retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.result == 'success'

    steps:
    - uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/TelegramSafetyKeeper-ubuntu-latest/TelegramSafetyKeeper-linux.zip
          artifacts/TelegramSafetyKeeper-windows-latest/TelegramSafetyKeeper-windows.zip
          artifacts/TelegramSafetyKeeper-macos-latest/TelegramSafetyKeeper-macos.zip